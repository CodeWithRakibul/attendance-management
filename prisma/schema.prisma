generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./data/dev.db"
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  employees Employee[]
}

model Device {
  id            Int                @id @default(autoincrement())
  name          String
  ip            String
  port          Int
  status        String             @default("disconnected")
  lastConnected DateTime?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  connections   DeviceConnection[]
}

model Employee {
  id          Int             @id @default(autoincrement())
  userId      Int
  name        String
  phone       String?
  designation String?
  status      EmployeeStatus  @default("ACTIVE")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  user        User            @relation(fields: [userId], references: [id])
  shifts      EmployeeShift[]
}

model Shift {
  id           Int             @id @default(autoincrement())
  name         String
  checkInTime  String
  checkOutTime String
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  employees    EmployeeShift[]
}

model EmployeeShift {
  id         Int      @id @default(autoincrement())
  employeeId Int
  shiftId    Int
  shift      Shift    @relation(fields: [shiftId], references: [id])
  employee   Employee @relation(fields: [employeeId], references: [id])

  @@unique([employeeId, shiftId])
}

model DeviceConnection {
  id             Int       @id @default(autoincrement())
  deviceId       Int
  connectedAt    DateTime  @default(now())
  disconnectedAt DateTime?
  status         String
  errorMessage   String?
  device         Device    @relation(fields: [deviceId], references: [id])
}

enum EmployeeStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  TERMINATED
}
